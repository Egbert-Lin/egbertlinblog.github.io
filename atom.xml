<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Egbert Lin&#39;s Blog</title>
  
  <subtitle>“Life is not a race, but a journey to be savoured each step of the way” by Brian Dyson</subtitle>
  <link href="https://egbert-yu-ting.github.io/atom.xml" rel="self"/>
  
  <link href="https://egbert-yu-ting.github.io/"/>
  <updated>2021-01-18T00:52:17.327Z</updated>
  <id>https://egbert-yu-ting.github.io/</id>
  
  <author>
    <name>EgbertLin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[LeetCode Road] Pascals&#39;s Triangle</title>
    <link href="https://egbert-yu-ting.github.io/posts/2b0547f6/"/>
    <id>https://egbert-yu-ting.github.io/posts/2b0547f6/</id>
    <published>2021-01-18T00:13:34.000Z</published>
    <updated>2021-01-18T00:52:17.327Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;118. Pascals&#39;s Triangle&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given a non-negative integer numRows, generate the first numRows of Pascal&#39;s triangle.&lt;br&gt; &lt;font size=&quot;2&quot;&gt;In Pascal&#39;s triangle, each number is the sum of the two numbers directly above it.&lt;/font&gt;</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Recursion" scheme="https://egbert-yu-ting.github.io/tags/Recursion/"/>
    
    <category term="2D_vector" scheme="https://egbert-yu-ting.github.io/tags/2D-vector/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Path Sum</title>
    <link href="https://egbert-yu-ting.github.io/posts/bb7f02f5/"/>
    <id>https://egbert-yu-ting.github.io/posts/bb7f02f5/</id>
    <published>2021-01-17T07:54:09.000Z</published>
    <updated>2021-01-18T00:42:30.763Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;112. Path Sum&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; A leaf is a node with no children.</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Tree" scheme="https://egbert-yu-ting.github.io/tags/Tree/"/>
    
    <category term="Recursion" scheme="https://egbert-yu-ting.github.io/tags/Recursion/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road]  Minimum Depth of Binary Tree</title>
    <link href="https://egbert-yu-ting.github.io/posts/2397063c/"/>
    <id>https://egbert-yu-ting.github.io/posts/2397063c/</id>
    <published>2021-01-16T10:23:34.000Z</published>
    <updated>2021-01-16T11:27:41.403Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;111. Minimum Depth of Binary Tree&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given a binary tree, find its minimum depth.&lt;/p&gt;
&lt;p&gt;The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; A leaf is a node with no children.</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Tree" scheme="https://egbert-yu-ting.github.io/tags/Tree/"/>
    
    <category term="Recursion" scheme="https://egbert-yu-ting.github.io/tags/Recursion/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Balanced Binary Tree</title>
    <link href="https://egbert-yu-ting.github.io/posts/b3e1ca12/"/>
    <id>https://egbert-yu-ting.github.io/posts/b3e1ca12/</id>
    <published>2021-01-15T02:13:15.000Z</published>
    <updated>2021-01-18T00:54:57.766Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;110. Balanced Binary Tree&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given a binary tree, determine if it is height-balanced.&lt;/p&gt;
For this problem, a height-balanced binary tree is defined as:
&lt;p style=&quot;background-color:#F0F0F0&quot;&gt;
&lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;a binary tree in which the left and right subtrees of &lt;l&gt;every&lt;/l&gt; node differ in height by no more than 1.&lt;/font&gt;&lt;/span&gt;
&lt;/p&gt;</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Tree" scheme="https://egbert-yu-ting.github.io/tags/Tree/"/>
    
    <category term="Recursion" scheme="https://egbert-yu-ting.github.io/tags/Recursion/"/>
    
  </entry>
  
  <entry>
    <title>Hexo NexT v8.x.x - Add recent posts</title>
    <link href="https://egbert-yu-ting.github.io/posts/68394953/"/>
    <id>https://egbert-yu-ting.github.io/posts/68394953/</id>
    <published>2021-01-13T03:09:05.000Z</published>
    <updated>2021-01-18T00:55:21.376Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;How to add recent posts to Next theme（v8.x.x）&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;p&gt;If you have managed your blog for a long time, maybe you want to reach high impression, you can append &lt;strong&gt;Recent Post&lt;/strong&gt; to sidebar. Viewers can see it whatever the article they read.</summary>
    
    
    
    <category term="Hexo" scheme="https://egbert-yu-ting.github.io/categories/hexo/"/>
    
    
    <category term="Tech" scheme="https://egbert-yu-ting.github.io/tags/Tech/"/>
    
    <category term="Sidebar" scheme="https://egbert-yu-ting.github.io/tags/Sidebar/"/>
    
    <category term="Post" scheme="https://egbert-yu-ting.github.io/tags/Post/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Convert Sorted Array to Binary Search Tree</title>
    <link href="https://egbert-yu-ting.github.io/posts/17bf1818/"/>
    <id>https://egbert-yu-ting.github.io/posts/17bf1818/</id>
    <published>2021-01-08T02:44:56.000Z</published>
    <updated>2021-01-16T11:27:33.779Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;108. Convert Sorted Array to Binary Search Tree&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given an array where elements are sorted in ascending order, convert it to a height balanced BST.&lt;/p&gt;
&lt;p&gt;For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Recursion" scheme="https://egbert-yu-ting.github.io/tags/Recursion/"/>
    
    <category term="TreeNode" scheme="https://egbert-yu-ting.github.io/tags/TreeNode/"/>
    
  </entry>
  
  <entry>
    <title>Shared partition between Mac OS X and Windows 10 [Save time]</title>
    <link href="https://egbert-yu-ting.github.io/posts/4755908e/"/>
    <id>https://egbert-yu-ting.github.io/posts/4755908e/</id>
    <published>2021-01-07T03:15:05.000Z</published>
    <updated>2021-01-13T00:58:50.412Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;Bootcamp: File sharing between Mac OS X and Windows 10 on MacBook Pro&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;p&gt;Here are some reason you should consider deploying Windows on your Mac device. 1. More games with better performance in Windows OS. 2. Some Applications don&#39;t work in macOS or not support all functions. 3. Developers need to test projects in Windows OS.&lt;/p&gt;
&lt;p&gt;So, I shared my experience to save your time of installing Windows on MacBook Pro.</summary>
    
    
    
    <category term="Instruction" scheme="https://egbert-yu-ting.github.io/categories/Instruction/"/>
    
    
    <category term="MacOS_X" scheme="https://egbert-yu-ting.github.io/tags/MacOS-X/"/>
    
    <category term="Windows10" scheme="https://egbert-yu-ting.github.io/tags/Windows10/"/>
    
    <category term="Bootcamp" scheme="https://egbert-yu-ting.github.io/tags/Bootcamp/"/>
    
  </entry>
  
  <entry>
    <title>[One-time success] How to install Ryu on Ubuntu - Tutorial</title>
    <link href="https://egbert-yu-ting.github.io/posts/9e0f4e5/"/>
    <id>https://egbert-yu-ting.github.io/posts/9e0f4e5/</id>
    <published>2021-01-06T06:14:43.000Z</published>
    <updated>2021-01-13T06:02:54.595Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;Tutorial - Install Ryu in Ubuntu 16.04 with no failure&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ryu.readthedocs.io/en/latest/index.html&quot;&gt;Ryu&lt;/a&gt; is a component-based software defined networking framework. It&#39;s very easy to develop your own SDN controller. And, if you have any questions, there are rich source on the internet.</summary>
    
    
    
    <category term="Simulator" scheme="https://egbert-yu-ting.github.io/categories/simulator/"/>
    
    
    <category term="Ubuntu" scheme="https://egbert-yu-ting.github.io/tags/Ubuntu/"/>
    
    <category term="SDN" scheme="https://egbert-yu-ting.github.io/tags/SDN/"/>
    
    <category term="Controller" scheme="https://egbert-yu-ting.github.io/tags/Controller/"/>
    
  </entry>
  
  <entry>
    <title>[Quick and Easy] Installation of ns-3 Simulator with OpenFlow 1.3 - Tutorial</title>
    <link href="https://egbert-yu-ting.github.io/posts/8ece0fb0/"/>
    <id>https://egbert-yu-ting.github.io/posts/8ece0fb0/</id>
    <published>2021-01-05T12:57:13.000Z</published>
    <updated>2021-01-12T06:56:49.182Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;ns-3 configuration and ofswitch13 module - Tutorial&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;p&gt;I had deployed the ns-3 simulation with ofswitch13 successfully. I&#39;ve been struggling to solve the simulation platform a lot of time. So, my experience is quite valuable and self-giving sharing for the ns-3 beginners. The following procedure can be deployed on VMware/Virtual machine or cloud instance. If your want to know how to deploy ns-3 on remote cloud instance easily, I will post an article to demonstrate full steps.</summary>
    
    
    
    <category term="Simulator" scheme="https://egbert-yu-ting.github.io/categories/simulator/"/>
    
    
    <category term="SDN" scheme="https://egbert-yu-ting.github.io/tags/SDN/"/>
    
    <category term="Simulation" scheme="https://egbert-yu-ting.github.io/tags/Simulation/"/>
    
    <category term="ns-3" scheme="https://egbert-yu-ting.github.io/tags/ns-3/"/>
    
    <category term="ofswitch" scheme="https://egbert-yu-ting.github.io/tags/ofswitch/"/>
    
    <category term="OpenFlow1.3" scheme="https://egbert-yu-ting.github.io/tags/OpenFlow1-3/"/>
    
  </entry>
  
  <entry>
    <title>[Step by Step] How to install Google Chrome on Ubuntu 16.04</title>
    <link href="https://egbert-yu-ting.github.io/posts/65af7d45/"/>
    <id>https://egbert-yu-ting.github.io/posts/65af7d45/</id>
    <published>2021-01-05T11:33:27.000Z</published>
    <updated>2021-01-13T00:15:02.816Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;Tutorial - Google Chrome Web Browser in Ubuntu&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;p&gt;If you are working on the Ubuntu environment and not used to using FireFox browser, Google Chrome maybe is your first choice. Here, I shared my experience of installing Google Chrome on Ubuntu 16.04. You can implement it rapidly and easily.</summary>
    
    
    
    <category term="Instruction" scheme="https://egbert-yu-ting.github.io/categories/Instruction/"/>
    
    
    <category term="Ubuntu" scheme="https://egbert-yu-ting.github.io/tags/Ubuntu/"/>
    
    <category term="Google_Chrome" scheme="https://egbert-yu-ting.github.io/tags/Google-Chrome/"/>
    
  </entry>
  
  <entry>
    <title>Interview programming question - Find second largest element</title>
    <link href="https://egbert-yu-ting.github.io/posts/16153cc7/"/>
    <id>https://egbert-yu-ting.github.io/posts/16153cc7/</id>
    <published>2021-01-05T05:52:46.000Z</published>
    <updated>2021-01-18T00:54:41.516Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;Let coding interview become easy - Find second largest element&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;p&gt;Maybe you will face it problem when you have an interview for a job with Tech. company. The problem is &quot;How to find second largest element?&quot;, it seems very easy to get result, but you must propose an efficient approach.</summary>
    
    
    
    <category term="CodeInterview" scheme="https://egbert-yu-ting.github.io/categories/codeinterview/"/>
    
    
    <category term="Pair" scheme="https://egbert-yu-ting.github.io/tags/Pair/"/>
    
    <category term="INT_MIN" scheme="https://egbert-yu-ting.github.io/tags/INT-MIN/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Binary Tree Level Order Traversal II</title>
    <link href="https://egbert-yu-ting.github.io/posts/cac8b982/"/>
    <id>https://egbert-yu-ting.github.io/posts/cac8b982/</id>
    <published>2020-12-30T00:38:38.000Z</published>
    <updated>2021-01-16T11:28:22.127Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;107. Binary Tree Level Order Traversal II&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given a binary tree, return the &lt;em&gt;bottom-up level order&lt;/em&gt; traversal of its nodes&#39; values. (ie, from left to right, level by level from leaf to root).</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Recursion" scheme="https://egbert-yu-ting.github.io/tags/Recursion/"/>
    
    <category term="STL" scheme="https://egbert-yu-ting.github.io/tags/STL/"/>
    
    <category term="2D_Vector" scheme="https://egbert-yu-ting.github.io/tags/2D-Vector/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Maximum Depth of Binary Tree</title>
    <link href="https://egbert-yu-ting.github.io/posts/57b52472/"/>
    <id>https://egbert-yu-ting.github.io/posts/57b52472/</id>
    <published>2020-12-25T01:32:23.000Z</published>
    <updated>2021-01-16T11:29:53.161Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;104. Maximum Depth of Binary Tree&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given the &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;root&lt;/font&gt;&lt;/span&gt; of a binary tree, return &lt;em&gt;its maximum depth&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A binary tree&#39;s &lt;strong&gt;maximum depth&lt;/strong&gt; is the number of nodes along the longest path from the root node down to the farthest leaf node.</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Tree" scheme="https://egbert-yu-ting.github.io/tags/Tree/"/>
    
    <category term="Recursion" scheme="https://egbert-yu-ting.github.io/tags/Recursion/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Symmetric Tree</title>
    <link href="https://egbert-yu-ting.github.io/posts/d1f23ab6/"/>
    <id>https://egbert-yu-ting.github.io/posts/d1f23ab6/</id>
    <published>2020-12-24T00:40:10.000Z</published>
    <updated>2021-01-16T11:33:48.376Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;101. Symmetric Tree&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Tree" scheme="https://egbert-yu-ting.github.io/tags/Tree/"/>
    
    <category term="Recursion" scheme="https://egbert-yu-ting.github.io/tags/Recursion/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Same Tree</title>
    <link href="https://egbert-yu-ting.github.io/posts/2ef96137/"/>
    <id>https://egbert-yu-ting.github.io/posts/2ef96137/</id>
    <published>2020-12-23T01:14:29.000Z</published>
    <updated>2021-01-16T11:33:19.944Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;100. Same Tree&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given the roots of two binary trees &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;p&lt;/font&gt;&lt;/span&gt; and &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;q&lt;/font&gt;&lt;/span&gt;, write a function to check if they are the same or not.&lt;/p&gt;
Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Tree" scheme="https://egbert-yu-ting.github.io/tags/Tree/"/>
    
    <category term="Recursion" scheme="https://egbert-yu-ting.github.io/tags/Recursion/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Merge Sorted Array</title>
    <link href="https://egbert-yu-ting.github.io/posts/1cc4a24a/"/>
    <id>https://egbert-yu-ting.github.io/posts/1cc4a24a/</id>
    <published>2020-12-22T06:39:08.000Z</published>
    <updated>2021-01-16T11:30:32.712Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;88. Merge Sorted Array&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given two sorted integer arrays &lt;em&gt;nums1&lt;/em&gt; and &lt;em&gt;nums2&lt;/em&gt;, merge &lt;em&gt;nums2&lt;/em&gt; into &lt;em&gt;nums1&lt;/em&gt; as one sorted array. &lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The number of elements initialized in nums1 and nums2 are m and n respectively.&lt;/li&gt;
&lt;li&gt;You may assume that nums1 has enough space (size that is equal to m + n) to hold additional elements from nums2.</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Vector" scheme="https://egbert-yu-ting.github.io/tags/Vector/"/>
    
    <category term="Call_by_reference" scheme="https://egbert-yu-ting.github.io/tags/Call-by-reference/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Remove Duplicates from Sorted List</title>
    <link href="https://egbert-yu-ting.github.io/posts/66cc46ab/"/>
    <id>https://egbert-yu-ting.github.io/posts/66cc46ab/</id>
    <published>2020-12-22T00:31:02.000Z</published>
    <updated>2021-01-16T11:32:37.337Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;83. Remove Duplicates from Sorted List&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given a sorted linked list, delete all duplicates such that each element appear only once.</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="ListNode" scheme="https://egbert-yu-ting.github.io/tags/ListNode/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Climbing Stairs</title>
    <link href="https://egbert-yu-ting.github.io/posts/7af6a106/"/>
    <id>https://egbert-yu-ting.github.io/posts/7af6a106/</id>
    <published>2020-12-17T08:12:36.000Z</published>
    <updated>2021-01-16T11:28:34.112Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;70. Climbing Stairs&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;You are climbing a staircase. It takes &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;n&lt;/font&gt;&lt;/span&gt; steps to reach the top.&lt;/p&gt;
&lt;p&gt;Each time you can either climb &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;1&lt;/font&gt;&lt;/span&gt; or &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;2&lt;/font&gt;&lt;/span&gt; steps. In how many distinct ways can you climb to the top?</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Recursion" scheme="https://egbert-yu-ting.github.io/tags/Recursion/"/>
    
    <category term="Fibonacci_Sequence" scheme="https://egbert-yu-ting.github.io/tags/Fibonacci-Sequence/"/>
    
    <category term="Iterator" scheme="https://egbert-yu-ting.github.io/tags/Iterator/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Sqrt(x)</title>
    <link href="https://egbert-yu-ting.github.io/posts/72b31d68/"/>
    <id>https://egbert-yu-ting.github.io/posts/72b31d68/</id>
    <published>2020-12-17T00:56:30.000Z</published>
    <updated>2021-01-16T11:33:39.161Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;69. Sqrt(x)&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given a non-negative integer &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;x&lt;/font&gt;&lt;/span&gt;, compute and return &lt;em&gt;the square root of&lt;/em&gt; &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;x&lt;/font&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Since the return type is an integer, the decimal digits are &lt;b&gt;truncated&lt;/b&gt;, and only &lt;b&gt;the integer part&lt;/b&gt; of the result is returned.</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Binary_search" scheme="https://egbert-yu-ting.github.io/tags/Binary-search/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Add Binary</title>
    <link href="https://egbert-yu-ting.github.io/posts/e6133085/"/>
    <id>https://egbert-yu-ting.github.io/posts/e6133085/</id>
    <published>2020-12-16T02:22:19.000Z</published>
    <updated>2021-01-16T11:28:05.129Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;67. Add Binary&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given two binary strings &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;a&lt;/font&gt;&lt;/span&gt; and &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;b&lt;/font&gt;&lt;/span&gt;, return &lt;em&gt;their sum as a binary string&lt;/em&gt;.</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Logical_Operators" scheme="https://egbert-yu-ting.github.io/tags/Logical-Operators/"/>
    
    <category term="Shift_Operators" scheme="https://egbert-yu-ting.github.io/tags/Shift-Operators/"/>
    
    <category term="ASCII" scheme="https://egbert-yu-ting.github.io/tags/ASCII/"/>
    
    <category term="Reverse_iterator" scheme="https://egbert-yu-ting.github.io/tags/Reverse-iterator/"/>
    
  </entry>
  
</feed>
