<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Egbert Lin&#39;s Blog</title>
  
  <subtitle>“Life is not a race, but a journey to be savoured each step of the way” by Brian Dyson</subtitle>
  <link href="https://egbert-yu-ting.github.io/atom.xml" rel="self"/>
  
  <link href="https://egbert-yu-ting.github.io/"/>
  <updated>2021-02-23T01:38:23.913Z</updated>
  <id>https://egbert-yu-ting.github.io/</id>
  
  <author>
    <name>EgbertLin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[LeetCode Road] Contains Duplicate II</title>
    <link href="https://egbert-yu-ting.github.io/posts/81b7ce15/"/>
    <id>https://egbert-yu-ting.github.io/posts/81b7ce15/</id>
    <published>2021-02-23T00:54:07.000Z</published>
    <updated>2021-02-23T01:38:23.913Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6px&quot;&gt;&lt;b&gt;219. Contains Duplicate&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given an array of integers and an integer &lt;I&gt;k&lt;/I&gt;, find out whether there are two distinct indices &lt;I&gt;i&lt;/I&gt; and &lt;I&gt;j&lt;/I&gt; in the array such that &lt;b&gt;nums[i]&lt;/b&gt; = &lt;b&gt;nums[j]&lt;/b&gt; and the &lt;b&gt;absolute&lt;/b&gt; difference between &lt;I&gt;i&lt;/I&gt; and &lt;I&gt;j&lt;/I&gt; is at most &lt;I&gt;k&lt;/I&gt;.</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Unordered_map(STL)" scheme="https://egbert-yu-ting.github.io/tags/Unordered-map-STL/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Contains Duplicate</title>
    <link href="https://egbert-yu-ting.github.io/posts/a3617bc9/"/>
    <id>https://egbert-yu-ting.github.io/posts/a3617bc9/</id>
    <published>2021-02-22T02:06:16.000Z</published>
    <updated>2021-02-23T00:37:15.418Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6px&quot;&gt;&lt;b&gt;217. Contains Duplicate&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given an array of integers, find if the array contains any duplicates.&lt;/p&gt;
&lt;p&gt;Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Unordered_map(STL)" scheme="https://egbert-yu-ting.github.io/tags/Unordered-map-STL/"/>
    
    <category term="Unordered_set(STL)" scheme="https://egbert-yu-ting.github.io/tags/Unordered-set-STL/"/>
    
    <category term="Sort" scheme="https://egbert-yu-ting.github.io/tags/Sort/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Reverse Linked List</title>
    <link href="https://egbert-yu-ting.github.io/posts/c6ae99a5/"/>
    <id>https://egbert-yu-ting.github.io/posts/c6ae99a5/</id>
    <published>2021-02-20T09:02:17.000Z</published>
    <updated>2021-02-22T08:33:54.586Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6px&quot;&gt;&lt;b&gt;206. Reverse Linked List&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given the &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;head&lt;/font&gt;&lt;/span&gt; of a singly linked list, reverse the list, and return &lt;I&gt;the reversed list&lt;/I&gt;.</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="ListNode" scheme="https://egbert-yu-ting.github.io/tags/ListNode/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Isomorphic Strings</title>
    <link href="https://egbert-yu-ting.github.io/posts/31bd0f13/"/>
    <id>https://egbert-yu-ting.github.io/posts/31bd0f13/</id>
    <published>2021-02-19T03:01:12.000Z</published>
    <updated>2021-02-22T06:11:11.308Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6px&quot;&gt;&lt;b&gt;205. Isomorphic Strings&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given two strings &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;s&lt;/font&gt;&lt;/span&gt; and &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;t&lt;/font&gt;&lt;/span&gt;, determine if they are isomorphic.&lt;/p&gt;
&lt;p&gt;Two strings &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;s&lt;/font&gt;&lt;/span&gt; and &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;t&lt;/font&gt;&lt;/span&gt; are isomorphic if the characters in s can be replaced to get &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;t&lt;/font&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Unordered_map(STL)" scheme="https://egbert-yu-ting.github.io/tags/Unordered-map-STL/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Count Primes</title>
    <link href="https://egbert-yu-ting.github.io/posts/bcde18a6/"/>
    <id>https://egbert-yu-ting.github.io/posts/bcde18a6/</id>
    <published>2021-02-17T03:31:48.000Z</published>
    <updated>2021-02-22T06:57:37.708Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6px&quot;&gt;&lt;b&gt;204. Count Primes&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Count the number of prime numbers less than a non-negative number, &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;n&lt;/span&gt;&lt;/font&gt;.&lt;/p&gt;
&lt;h2 id=&quot;example&quot;&gt;Example:&lt;/h2&gt;
&lt;p style=&quot;background-color:#F0F0F0&quot;&gt;
&lt;b&gt;Input:&lt;/b&gt; n = 10&lt;br&gt; &lt;b&gt;Output:&lt;/b&gt; 4&lt;br&gt; &lt;b&gt;Explanation:&lt;/b&gt; There are 4 prime numbers less than 10, they are 2, 3, 5, 7.
&lt;/p&gt;</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Vector" scheme="https://egbert-yu-ting.github.io/tags/Vector/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Remove Linked List Elements</title>
    <link href="https://egbert-yu-ting.github.io/posts/2ded864c/"/>
    <id>https://egbert-yu-ting.github.io/posts/2ded864c/</id>
    <published>2021-02-08T02:49:56.000Z</published>
    <updated>2021-02-17T03:28:14.723Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6px&quot;&gt;&lt;b&gt;203. Remove Linked List Elements&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Remove all elements from a linked list of integers that have value &lt;I&gt;&lt;b&gt;val&lt;/b&gt;&lt;/I&gt;.&lt;/p&gt;
&lt;h2 id=&quot;example&quot;&gt;Example:&lt;/h2&gt;
&lt;p style=&quot;background-color:#F0F0F0&quot;&gt;
&lt;b&gt;Input:&lt;/b&gt; 1-&amp;gt;2-&amp;gt;6-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;6, &lt;I&gt;&lt;b&gt;val&lt;/b&gt;&lt;/I&gt; = 6&lt;br&gt; &lt;b&gt;Output:&lt;/b&gt; 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5
&lt;/p&gt;</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="ListNode" scheme="https://egbert-yu-ting.github.io/tags/ListNode/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Happy Number</title>
    <link href="https://egbert-yu-ting.github.io/posts/e73e301/"/>
    <id>https://egbert-yu-ting.github.io/posts/e73e301/</id>
    <published>2021-02-05T01:11:00.000Z</published>
    <updated>2021-02-22T06:12:01.105Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6px&quot;&gt;&lt;b&gt;202. Happy Number&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Write an algorithm to determine if a number &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;n&lt;/span&gt;&lt;/font&gt; is happy.&lt;/p&gt;
&lt;p&gt;A &lt;b&gt;happy number&lt;/b&gt; is a number defined by the following process:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
Starting with any positive integer, replace the number by the sum of the squares of its digits.
&lt;/li&gt;
&lt;li&gt;
Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.
&lt;/li&gt;
&lt;li&gt;
Those numbers for which this process ends in 1 are happy.
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Return &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;true&lt;/font&gt;&lt;/span&gt; &lt;I&gt;if&lt;/I&gt; &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;n&lt;/font&gt;&lt;/span&gt; &lt;I&gt;is a happy number, and&lt;/I&gt; &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;false&lt;/font&gt;&lt;/span&gt; &lt;I&gt;if not&lt;/I&gt;.</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Unordered_map(STL)" scheme="https://egbert-yu-ting.github.io/tags/Unordered-map-STL/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Number of 1 Bits</title>
    <link href="https://egbert-yu-ting.github.io/posts/790fdd9f/"/>
    <id>https://egbert-yu-ting.github.io/posts/790fdd9f/</id>
    <published>2021-02-05T00:52:35.000Z</published>
    <updated>2021-02-05T07:17:48.888Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6px&quot;&gt;&lt;b&gt;191. Number of 1 Bits&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Write a function that takes an unsigned integer and returns the number of &#39;1&#39; bits it has (also known as the &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;Hamming weight&lt;/span&gt;&lt;/font&gt;).&lt;/p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;
Note that in some languages such as Java, there is no unsigned integer type. In this case, the input will be given as a signed integer type. It should not affect your implementation, as the integer&#39;s internal binary representation is the same, whether it is signed or unsigned.
&lt;/li&gt;
&lt;li&gt;
In Java, the compiler represents the signed integers using &lt;a href=&quot;https://en.wikipedia.org/wiki/Two%27s_complement&quot;&gt;2&#39;s complement&lt;/a&gt; notation. Therefore, in &lt;b&gt;Example 3&lt;/b&gt; above, the input represents the signed integer. &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;-3&lt;/font&gt;
&lt;/style&gt;
.
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Shift_Operators" scheme="https://egbert-yu-ting.github.io/tags/Shift-Operators/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Reverse Bits</title>
    <link href="https://egbert-yu-ting.github.io/posts/417b9784/"/>
    <id>https://egbert-yu-ting.github.io/posts/417b9784/</id>
    <published>2021-02-02T17:01:27.000Z</published>
    <updated>2021-02-05T01:01:26.124Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6px&quot;&gt;&lt;b&gt;190. Reverse Bits&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Reverse bits of a given 32 bits unsigned integer.&lt;/p&gt;
&lt;b&gt;Note:&lt;/b&gt;&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;
Note that in some languages such as Java, there is no unsigned integer type. In this case, both input and output will be given as a signed integer type. They should not affect your implementation, as the integer&#39;s internal binary representation is the same, whether it is signed or unsigned.
&lt;/li&gt;
&lt;li&gt;
In Java, the compiler represents the signed integers using 2&#39;s complement notation. Therefore, in Example 2 above, the input represents the signed integer -3 and the output represents the signed integer -1073741825.
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Shift_Operators" scheme="https://egbert-yu-ting.github.io/tags/Shift-Operators/"/>
    
  </entry>
  
  <entry>
    <title>Data Structures - Exponential Search Algorithm</title>
    <link href="https://egbert-yu-ting.github.io/posts/85970ec4/"/>
    <id>https://egbert-yu-ting.github.io/posts/85970ec4/</id>
    <published>2021-02-02T02:02:14.000Z</published>
    <updated>2021-02-04T16:16:54.163Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6px&quot;&gt;&lt;b&gt;Basic programming - Exponential Search&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given a sorted array, and an element x to be searched, find position of x in the array.</summary>
    
    
    
    <category term="SearchAlgorithm" scheme="https://egbert-yu-ting.github.io/categories/searchalgorithm/"/>
    
    
    <category term="Searching" scheme="https://egbert-yu-ting.github.io/tags/Searching/"/>
    
  </entry>
  
  <entry>
    <title>Data Structures - Binary Search Algorithm</title>
    <link href="https://egbert-yu-ting.github.io/posts/dad48e10/"/>
    <id>https://egbert-yu-ting.github.io/posts/dad48e10/</id>
    <published>2021-02-01T07:50:08.000Z</published>
    <updated>2021-02-04T16:16:52.421Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6px&quot;&gt;&lt;b&gt;Basic programming - Binary Search&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given a sorted array arr[] of n elements, write a function to search a given element x in arr[].</summary>
    
    
    
    <category term="SearchAlgorithm" scheme="https://egbert-yu-ting.github.io/categories/searchalgorithm/"/>
    
    
    <category term="Searching" scheme="https://egbert-yu-ting.github.io/tags/Searching/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Factorial Trailing Zeroes</title>
    <link href="https://egbert-yu-ting.github.io/posts/b0d56b8b/"/>
    <id>https://egbert-yu-ting.github.io/posts/b0d56b8b/</id>
    <published>2021-02-01T06:16:57.000Z</published>
    <updated>2021-02-01T07:06:06.807Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6px&quot;&gt;&lt;b&gt;172. Factorial Trailing Zeroes&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given an integer &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;n&lt;/font&gt;&lt;/span&gt;, &lt;I&gt;return the number of trailing zeroes in &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;n!&lt;/font&gt;&lt;/span&gt;&lt;/I&gt;.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Follow up:&lt;/b&gt; Could you write a solution that works in logarithmic time complexity?</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
  </entry>
  
  <entry>
    <title>Data Structures - Linear Search Algorithm diagram</title>
    <link href="https://egbert-yu-ting.github.io/posts/65334f02/"/>
    <id>https://egbert-yu-ting.github.io/posts/65334f02/</id>
    <published>2021-02-01T00:53:55.000Z</published>
    <updated>2021-02-04T16:16:55.751Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6px&quot;&gt;&lt;b&gt;Basic programming - Linear Search&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given an array arr[] of n elements, write a function to search a given element x in arr[].</summary>
    
    
    
    <category term="SearchAlgorithm" scheme="https://egbert-yu-ting.github.io/categories/searchalgorithm/"/>
    
    
    <category term="Searching" scheme="https://egbert-yu-ting.github.io/tags/Searching/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Excel Sheet Column Number</title>
    <link href="https://egbert-yu-ting.github.io/posts/10e6d46c/"/>
    <id>https://egbert-yu-ting.github.io/posts/10e6d46c/</id>
    <published>2021-01-30T15:33:43.000Z</published>
    <updated>2021-01-30T17:16:17.372Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6px&quot;&gt;&lt;b&gt;171. Excel Sheet Column Number&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given a column title as appear in an Excel sheet, return its corresponding column number.&lt;/p&gt;
For example:
&lt;p style=&quot;background-color:#F0F0F0&quot;&gt;
  A -&amp;gt; 1&lt;br&gt;   B -&amp;gt; 2&lt;br&gt;   C -&amp;gt; 3&lt;br&gt;   ...&lt;br&gt;   Z -&amp;gt; 26&lt;br&gt;   AA -&amp;gt; 27&lt;br&gt;   AB -&amp;gt; 28&lt;br&gt;   ...
&lt;/p&gt;</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="ASCII" scheme="https://egbert-yu-ting.github.io/tags/ASCII/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] Majority Element</title>
    <link href="https://egbert-yu-ting.github.io/posts/ef374e86/"/>
    <id>https://egbert-yu-ting.github.io/posts/ef374e86/</id>
    <published>2021-01-29T01:19:53.000Z</published>
    <updated>2021-02-22T06:55:21.846Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6px&quot;&gt;&lt;b&gt;169. Majority Element&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given an array &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;nums&lt;/font&gt;&lt;/span&gt; of size &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;n&lt;/font&gt;&lt;/span&gt;, return &lt;em&gt;the majority element&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Follow-up:&lt;/strong&gt; Could you solve the problem in linear time and in &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;Ｏ(1)&lt;/font&gt;&lt;/span&gt; space?</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Unordered_map(STL)" scheme="https://egbert-yu-ting.github.io/tags/Unordered-map-STL/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Excel Sheet column Title</title>
    <link href="https://egbert-yu-ting.github.io/posts/961e4f43/"/>
    <id>https://egbert-yu-ting.github.io/posts/961e4f43/</id>
    <published>2021-01-28T16:05:00.000Z</published>
    <updated>2021-01-30T16:17:02.464Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6px&quot;&gt;&lt;b&gt;168. Excel Sheet Column Title&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given a positive integer, return its corresponding column title as appear in an Excel sheet.&lt;/p&gt;
For example:
&lt;p style=&quot;background-color:#F0F0F0&quot;&gt;
  1 -&amp;gt; A&lt;br&gt;   2 -&amp;gt; B&lt;br&gt;   3 -&amp;gt; C&lt;br&gt;   ...&lt;br&gt;   26 -&amp;gt; Z&lt;br&gt;   27 -&amp;gt; AA&lt;br&gt;   28 -&amp;gt; AB &lt;br&gt;   ...
&lt;/p&gt;</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="ASCII" scheme="https://egbert-yu-ting.github.io/tags/ASCII/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Two Sum II - Input array is sorted</title>
    <link href="https://egbert-yu-ting.github.io/posts/a4366474/"/>
    <id>https://egbert-yu-ting.github.io/posts/a4366474/</id>
    <published>2021-01-28T00:29:41.000Z</published>
    <updated>2021-02-02T17:17:36.616Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6px&quot;&gt;&lt;b&gt;Two Sum II - Input array is sorted&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given an array of integers that is already &lt;b&gt;&lt;I&gt;sorted in ascending order&lt;/I&gt;&lt;/b&gt;, find two numbers such that they add up to a specific target number.&lt;/p&gt;
&lt;p&gt;The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2.</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Intersection of Two Linked Lists</title>
    <link href="https://egbert-yu-ting.github.io/posts/a44c9fee/"/>
    <id>https://egbert-yu-ting.github.io/posts/a44c9fee/</id>
    <published>2021-01-26T08:01:15.000Z</published>
    <updated>2021-01-27T09:12:40.895Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;160. Intersection of Two Linked Lists&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Write a program to find the node at which the intersection of two singly linked lists begins.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;For example, the following two linked lists:</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="ListNode" scheme="https://egbert-yu-ting.github.io/tags/ListNode/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Min Stack - Solution/C++</title>
    <link href="https://egbert-yu-ting.github.io/posts/cb679286/"/>
    <id>https://egbert-yu-ting.github.io/posts/cb679286/</id>
    <published>2021-01-25T08:31:05.000Z</published>
    <updated>2021-01-26T07:27:12.885Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;155. Min Stack&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.&lt;br&gt;&lt;/p&gt;
&lt;storng&gt;
&lt;/li&gt;
push(x) -- Push element x onto stack.
&lt;/li&gt;
&lt;/strong&gt; &lt;storng&gt;
&lt;/li&gt;
pop() -- Removes the element on top of the stack.
&lt;/li&gt;
&lt;/strong&gt; &lt;storng&gt;
&lt;/li&gt;
top() -- Get the top element.
&lt;/li&gt;
&lt;/storng&gt; &lt;storng&gt;
&lt;/li&gt;
getMin() -- Retrieve the minimum element in the stack.
&lt;/li&gt;
&lt;p&gt;&lt;/strong&gt;</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Stack" scheme="https://egbert-yu-ting.github.io/tags/Stack/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode Road] Linked List Cycle - Solution/C++</title>
    <link href="https://egbert-yu-ting.github.io/posts/44e8eae/"/>
    <id>https://egbert-yu-ting.github.io/posts/44e8eae/</id>
    <published>2021-01-25T01:04:33.000Z</published>
    <updated>2021-02-22T06:54:36.304Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;
&lt;font size=&quot;6&quot;&gt;&lt;b&gt;141. Linked List Cycle&lt;/b&gt;&lt;/font&gt;
&lt;/p&gt;
&lt;h2 id=&quot;question&quot;&gt;Question:&lt;/h2&gt;
&lt;p&gt;Given &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;head&lt;/font&gt;&lt;/span&gt;, the head of a linked list, determine if the linked list has a cycle in it.&lt;/p&gt;
&lt;p&gt;There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;next&lt;/font&gt;&lt;/soab&gt; pointer. Internally, &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;pos&lt;/font&gt;&lt;/span&gt; is used to denote the index of the node that tail&#39;s &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;next&lt;/font&gt;&lt;/span&gt; pointer is connected to. &lt;strong&gt;Note&lt;/strong&gt; that &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;pos&lt;/font&gt;&lt;/span&gt; &lt;strong&gt;is not passed as a parameter&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Return &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;true&lt;/font&gt;&lt;/span&gt; &lt;em&gt;if there is a cycle in the linked list&lt;/em&gt;. Otherwise, return &lt;span style=&quot;background-color:#F0F0F0&quot;&gt;&lt;font color=#808080&gt;false&lt;/font&gt;&lt;/span&gt;.</summary>
    
    
    
    <category term="LeetCode-Easy" scheme="https://egbert-yu-ting.github.io/categories/leetcode-easy/"/>
    
    
    <category term="Unordered_set(STL)" scheme="https://egbert-yu-ting.github.io/tags/Unordered-set-STL/"/>
    
    <category term="ListNode" scheme="https://egbert-yu-ting.github.io/tags/ListNode/"/>
    
    <category term="Algorithm" scheme="https://egbert-yu-ting.github.io/tags/Algorithm/"/>
    
  </entry>
  
</feed>
